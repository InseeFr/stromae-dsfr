/*! For license information please see tab.module.js.LICENSE.txt */
const config={prefix:"fr",namespace:"dsfr",organisation:"@gouvfr",version:"1.12.1"},api=window[config.namespace];class TabButton extends api.core.DisclosureButton{constructor(){super(api.core.DisclosureType.SELECT)}static get instanceClassName(){return"TabButton"}handleClick(s){super.handleClick(s),this.focus()}apply(s){super.apply(s),this.isPrimary&&(this.setAttribute("tabindex",s?"0":"-1"),s&&this.list&&this.list.focalize(this))}get list(){return this.element.getAscendantInstance("TabsList","TabsGroup")}}const TabSelector={TAB:api.internals.ns.selector("tabs__tab"),GROUP:api.internals.ns.selector("tabs"),PANEL:api.internals.ns.selector("tabs__panel"),LIST:api.internals.ns.selector("tabs__list"),SHADOW:api.internals.ns.selector("tabs__shadow"),SHADOW_LEFT:api.internals.ns.selector("tabs__shadow--left"),SHADOW_RIGHT:api.internals.ns.selector("tabs__shadow--right"),PANEL_START:api.internals.ns.selector("tabs__panel--direction-start"),PANEL_END:api.internals.ns.selector("tabs__panel--direction-end")},TabPanelDirection={START:"direction-start",END:"direction-end",NONE:"none"};class TabPanel extends api.core.Disclosure{constructor(){super(api.core.DisclosureType.SELECT,TabSelector.PANEL,TabButton,"TabsGroup"),this._direction=TabPanelDirection.NONE,this._isPreventingTransition=!1}static get instanceClassName(){return"TabPanel"}get direction(){return this._direction}set direction(s){if(s!==this._direction){switch(this._direction){case TabPanelDirection.START:this.removeClass(TabSelector.PANEL_START);break;case TabPanelDirection.END:this.removeClass(TabSelector.PANEL_END);break;case TabPanelDirection.NONE:break;default:return}switch(this._direction=s,this._direction){case TabPanelDirection.START:this.addClass(TabSelector.PANEL_START);break;case TabPanelDirection.END:this.addClass(TabSelector.PANEL_END)}}}get isPreventingTransition(){return this._isPreventingTransition}set isPreventingTransition(s){this._isPreventingTransition!==s&&(s?this.addClass(api.internals.motion.TransitionSelector.NONE):this.removeClass(api.internals.motion.TransitionSelector.NONE),this._isPreventingTransition=!0===s)}translate(s,t){this.isPreventingTransition=t,this.direction=s}reset(){this.group&&this.group.retrieve(!0)}_electPrimaries(s){return this.group&&this.group.list?super._electPrimaries(s).filter((s=>this.group.list.node.contains(s.node))):[]}}const TabKeys={LEFT:"tab_keys_left",RIGHT:"tab_keys_right",HOME:"tab_keys_home",END:"tab_keys_end"},TabEmission={PRESS_KEY:api.internals.ns.emission("tab","press_key"),LIST_HEIGHT:api.internals.ns.emission("tab","list_height")};class TabsGroup extends api.core.DisclosuresGroup{constructor(){super("TabPanel")}static get instanceClassName(){return"TabsGroup"}init(){super.init(),this.listen("transitionend",this.transitionend.bind(this)),this.addAscent(TabEmission.PRESS_KEY,this.pressKey.bind(this)),this.addAscent(TabEmission.LIST_HEIGHT,this.setListHeight.bind(this)),this.isRendering=!0}getIndex(s=0){super.getIndex(s)}get list(){return this.element.getDescendantInstances("TabsList","TabsGroup",!0)[0]}setListHeight(s){this.listHeight=s}transitionend(s){this.isPreventingTransition=!0}get buttonHasFocus(){return this.members.some((s=>s.buttonHasFocus))}pressKey(s){switch(s){case TabKeys.LEFT:this.pressLeft();break;case TabKeys.RIGHT:this.pressRight();break;case TabKeys.HOME:this.pressHome();break;case TabKeys.END:this.pressEnd()}}pressRight(){this.buttonHasFocus&&(this.index<this.length-1?this.index++:this.index=0,this.focus())}pressLeft(){this.buttonHasFocus&&(this.index>0?this.index--:this.index=this.length-1,this.focus())}pressHome(){this.buttonHasFocus&&(this.index=0,this.focus())}pressEnd(){this.buttonHasFocus&&(this.index=this.length-1,this.focus())}focus(){this.current&&this.current.focus()}apply(){for(let s=0;s<this._index;s++)this.members[s].translate(TabPanelDirection.START);this.current&&this.current.translate(TabPanelDirection.NONE);for(let s=this._index+1;s<this.length;s++)this.members[s].translate(TabPanelDirection.END);this.isPreventingTransition=!1}get isPreventingTransition(){return this._isPreventingTransition}set isPreventingTransition(s){this._isPreventingTransition!==s&&(s?this.addClass(api.internals.motion.TransitionSelector.NONE):this.removeClass(api.internals.motion.TransitionSelector.NONE),this._isPreventingTransition=!0===s)}render(){if(null===this.current)return;this.node.scrollTop=0,this.node.scrollLeft=0;const s=Math.round(this.current.node.offsetHeight);this.panelHeight!==s&&(this.panelHeight=s,this.style.setProperty("--tabs-height",this.panelHeight+this.listHeight+"px"))}}const FOCALIZE_OFFSET=16,SCROLL_OFFSET=16;class TabsList extends api.core.Instance{static get instanceClassName(){return"TabsList"}init(){this.listen("scroll",this.scroll.bind(this)),this.listenKey(api.core.KeyCodes.RIGHT,this.ascend.bind(this,TabEmission.PRESS_KEY,TabKeys.RIGHT),!0,!0),this.listenKey(api.core.KeyCodes.LEFT,this.ascend.bind(this,TabEmission.PRESS_KEY,TabKeys.LEFT),!0,!0),this.listenKey(api.core.KeyCodes.HOME,this.ascend.bind(this,TabEmission.PRESS_KEY,TabKeys.HOME),!0,!0),this.listenKey(api.core.KeyCodes.END,this.ascend.bind(this,TabEmission.PRESS_KEY,TabKeys.END),!0,!0),this.isResizing=!0}focalize(s){const t=s.getRect(),i=this.getRect(),e=this.node.scrollLeft;t.left<i.left?this.node.scrollTo(e-i.left+t.left-16,0):t.right>i.right&&this.node.scrollTo(e-i.right+t.right+16,0)}get isScrolling(){return this._isScrolling}set isScrolling(s){this._isScrolling!==s&&(this._isScrolling=s,this.apply())}apply(){this._isScrolling?(this.addClass(TabSelector.SHADOW),this.scroll()):(this.removeClass(TabSelector.SHADOW_RIGHT),this.removeClass(TabSelector.SHADOW_LEFT),this.removeClass(TabSelector.SHADOW))}scroll(){const s=this.node.scrollLeft,t=s<=16,i=this.node.scrollWidth-this.node.clientWidth-16,e=Math.abs(s)>=i,n="rtl"===document.documentElement.getAttribute("dir"),a=n?TabSelector.SHADOW_RIGHT:TabSelector.SHADOW_LEFT,r=n?TabSelector.SHADOW_LEFT:TabSelector.SHADOW_RIGHT;t?this.removeClass(a):this.addClass(a),e?this.removeClass(r):this.addClass(r)}resize(){this.isScrolling=this.node.scrollWidth>this.node.clientWidth+16;const s=this.getRect().height;this.setProperty("--tabs-list-height",`${s}px`),this.ascend(TabEmission.LIST_HEIGHT,s)}dispose(){this.isScrolling=!1}}api.tab={TabPanel:TabPanel,TabButton:TabButton,TabsGroup:TabsGroup,TabsList:TabsList,TabSelector:TabSelector,TabEmission:TabEmission},api.internals.register(api.tab.TabSelector.PANEL,api.tab.TabPanel),api.internals.register(api.tab.TabSelector.GROUP,api.tab.TabsGroup),api.internals.register(api.tab.TabSelector.LIST,api.tab.TabsList);