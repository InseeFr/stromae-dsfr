/*! For license information please see scheme.module.js.LICENSE.txt */
const config={prefix:"fr",namespace:"dsfr",organisation:"@gouvfr",version:"1.12.1"},api=window[config.namespace],SchemeValue={SYSTEM:"system",LIGHT:"light",DARK:"dark"},SchemeAttribute={THEME:api.internals.ns.attr("theme"),SCHEME:api.internals.ns.attr("scheme"),TRANSITION:api.internals.ns.attr("transition")},SchemeTheme={LIGHT:"light",DARK:"dark"},SchemeEmission={SCHEME:api.internals.ns.emission("scheme","scheme"),THEME:api.internals.ns.emission("scheme","theme"),ASK:api.internals.ns.emission("scheme","ask")},SchemeEvent={SCHEME:api.internals.ns.event("scheme"),THEME:api.internals.ns.event("theme")};class Scheme extends api.core.Instance{constructor(){super(!1)}static get instanceClassName(){return"Scheme"}init(){this.changing=this.change.bind(this),this.hasAttribute(SchemeAttribute.TRANSITION)&&(this.removeAttribute(SchemeAttribute.TRANSITION),this.request(this.restoreTransition.bind(this)));const e=api.internals.support.supportLocalStorage()?localStorage.getItem("scheme"):"",t=this.getAttribute(SchemeAttribute.SCHEME);switch(e){case SchemeValue.DARK:case SchemeValue.LIGHT:case SchemeValue.SYSTEM:this.scheme=e;break;default:switch(t){case SchemeValue.DARK:this.scheme=SchemeValue.DARK;break;case SchemeValue.LIGHT:this.scheme=SchemeValue.LIGHT;break;default:this.scheme=SchemeValue.SYSTEM}}this.addAscent(SchemeEmission.ASK,this.ask.bind(this)),this.addAscent(SchemeEmission.SCHEME,this.apply.bind(this))}get proxy(){const e=this,t={get scheme(){return e.scheme},set scheme(t){e.scheme=t}};return api.internals.property.completeAssign(super.proxy,t)}restoreTransition(){this.setAttribute(SchemeAttribute.TRANSITION,"")}ask(){this.descend(SchemeEmission.SCHEME,this.scheme)}apply(e){this.scheme=e}get scheme(){return this._scheme}set scheme(e){if(this._scheme!==e){switch(this._scheme=e,e){case SchemeValue.SYSTEM:this.listenPreferences();break;case SchemeValue.DARK:this.unlistenPreferences(),this.theme=SchemeTheme.DARK;break;case SchemeValue.LIGHT:this.unlistenPreferences(),this.theme=SchemeTheme.LIGHT;break;default:return void(this.scheme=SchemeValue.SYSTEM)}this.descend(SchemeEmission.SCHEME,e),api.internals.support.supportLocalStorage()&&localStorage.setItem("scheme",e),this.setAttribute(SchemeAttribute.SCHEME,e),this.dispatch(SchemeEvent.SCHEME,{scheme:this._scheme})}}get theme(){return this._theme}set theme(e){if(this._theme!==e)switch(e){case SchemeTheme.LIGHT:case SchemeTheme.DARK:this._theme=e,this.setAttribute(SchemeAttribute.THEME,e),this.descend(SchemeEmission.THEME,e),this.dispatch(SchemeEvent.THEME,{theme:this._theme}),document.documentElement.style.colorScheme=e===SchemeTheme.DARK?"dark":""}}listenPreferences(){this.isListening||(this.isListening=!0,this.mediaQuery=window.matchMedia("(prefers-color-scheme: dark)"),this.mediaQuery.addEventListener&&this.mediaQuery.addEventListener("change",this.changing),this.change())}unlistenPreferences(){this.isListening&&(this.isListening=!1,this.mediaQuery.removeEventListener("change",this.changing),this.mediaQuery=null)}change(){this.isListening&&(this.theme=this.mediaQuery.matches?SchemeTheme.DARK:SchemeTheme.LIGHT)}mutate(e){e.indexOf(SchemeAttribute.SCHEME)>-1&&(this.scheme=this.getAttribute(SchemeAttribute.SCHEME)),e.indexOf(SchemeAttribute.THEME)>-1&&(this.theme=this.getAttribute(SchemeAttribute.THEME))}dispose(){this.unlistenPreferences()}}const SchemeSelector={SCHEME:`:root${api.internals.ns.attr.selector("theme")}, :root${api.internals.ns.attr.selector("scheme")}`,SWITCH_THEME:api.internals.ns.selector("switch-theme"),RADIO_BUTTONS:`input[name="${api.internals.ns("radios-theme")}"]`};api.scheme={Scheme:Scheme,SchemeValue:SchemeValue,SchemeSelector:SchemeSelector,SchemeEmission:SchemeEmission,SchemeTheme:SchemeTheme,SchemeEvent:SchemeEvent},api.internals.register(api.scheme.SchemeSelector.SCHEME,api.scheme.Scheme);