/**
 * Generated by orval v6.29.1 üç∫
 * Do not edit manually.
 * queen-api
 * API for Queen/Stromae
 * OpenAPI spec version: 4.3.6-SNAPSHOT
 */
import type {
  MutationFunction,
  UseMutationOptions,
  UseMutationResult,
} from '@tanstack/react-query'
import { useMutation } from '@tanstack/react-query'
import { stromaeInstance } from './axiosInstance'

type SecondParameter<T extends (...args: any) => any> = Parameters<T>[1]

/**
 * Authorized roles: ADMIN / WEBCLIENT /
 * @summary Create dataset
 */
export const createDataSet = (
  options?: SecondParameter<typeof stromaeInstance>
) => {
  return stromaeInstance<void>(
    { url: `/api/create-dataset`, method: 'POST' },
    options
  )
}

export const getCreateDataSetMutationOptions = <
  TError = unknown,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof createDataSet>>,
    TError,
    void,
    TContext
  >
  request?: SecondParameter<typeof stromaeInstance>
}): UseMutationOptions<
  Awaited<ReturnType<typeof createDataSet>>,
  TError,
  void,
  TContext
> => {
  const { mutation: mutationOptions, request: requestOptions } = options ?? {}

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof createDataSet>>,
    void
  > = () => {
    return createDataSet(requestOptions)
  }

  return { mutationFn, ...mutationOptions }
}

export type CreateDataSetMutationResult = NonNullable<
  Awaited<ReturnType<typeof createDataSet>>
>

export type CreateDataSetMutationError = unknown

/**
 * @summary Create dataset
 */
export const useCreateDataSet = <
  TError = unknown,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof createDataSet>>,
    TError,
    void,
    TContext
  >
  request?: SecondParameter<typeof stromaeInstance>
}): UseMutationResult<
  Awaited<ReturnType<typeof createDataSet>>,
  TError,
  void,
  TContext
> => {
  const mutationOptions = getCreateDataSetMutationOptions(options)

  return useMutation(mutationOptions)
}
